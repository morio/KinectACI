#!/usr/bin/env python# -*- coding: utf-8 -*-#   Copyright 2011 Peter Morton & Matthew Yeung##   Licensed under the Apache License, Version 2.0 (the "License");#   you may not use this file except in compliance with the License.#   You may obtain a copy of the License at##	   http://www.apache.org/licenses/LICENSE-2.0##   Unless required by applicable law or agreed to in writing, software#   distributed under the License is distributed on an "AS IS" BASIS,#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.#   See the License for the specific language governing permissions and#   limitations under the License.from PyQt4 import QtGuiimport numpy as npimport pygameimport typewriterfrom setupeventfilters import setupEventFiltersfrom onfocusmanager import onFocusManagerfrom glviewer import Viewerfrom connector import Connector# Play with these constants to change the system responseSAMPLE_STRIDE = 2		  # Divide depth map resolution by this amountKB_WIDTH_FAC = 1		 # Width of keyboard = Length * KB_WIDTH_FACKB_HEIGHT_FAC = 1	   # Height of keyboard = Length * KB_HEIGHT_FACKB_GAP_FAC = 0.01		  # Gap between keys = KB Length * KB_GAP_FACKB_NUM_KEYS = 4		   # Only dealing with white keys for nowKB_START_KEY = 0		   # 0 = C2, 1 = D2, etc... (whites only)				if __name__ == '__main__':	app = QtGui.QApplication([])	pygame.mixer.init()	form_typewriter = QtGui.QWidget()	form_typewriter.setWindowTitle("KinetACI - Typewriter")	ui = typewriter.Ui_form_typewriter()	ui.setupUi(form_typewriter)	focusIn = onFocusManager()	setupEventFilters(ui, focusIn)	connector = Connector(ui, form_typewriter)	win = Viewer(connector)	connector.connect()	win.setWindowTitle("KinectACI - Kinect Data")	form_typewriter.show()	win.show()	app.exec_()